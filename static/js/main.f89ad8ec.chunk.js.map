{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","href","title","to","aboutText","onClick","toggleMode","role","htmlFor","Textform","useState","text","setText","heading","onChange","event","target","value","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","navigator","clipboard","writeText","split","join","filter","element","defaultProps","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f89ad8ec.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About(props) {\r\n    \r\n    let myStyle = {\r\n        color: props.mode === 'dark' ? 'white' : '#1a253a',\r\n        backgroundColor: props.mode === 'dark' ? '#1a253a' : 'white'\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-3\" style={myStyle}>\r\n            <h1>About us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                        <strong>Analyze your text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                        TextUtility gives you a way to analyze your text quickly and efficiently. Be it word count, character count and assume reading time of whole paragraph.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n                        <strong>Free to use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                        TextUtility is a free character counter that provides instant character count and word count statistics for a given text. TextUtility reports the number of words and characters. Thus it is suitable for writing text with word or character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n                            <strong>Browser compatible</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            This word counter software works in any web browsers such a Chrome, Firefox, Internet Explorer, Microsoft Edge, Safari, Opera. It suits to count characters in facebook, blogs, books, excel document, pdf document, essays, etc.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input me-2\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About text here'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n    const handleUpClick = ()=> {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert('Converted to Uppercase!', 'success');\r\n    }\r\n\r\n    const handleLoClick = ()=> {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('Converted to Lowercase!', 'success');\r\n    }\r\n\r\n    const handleClearClick = ()=> {\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert('Textbox is cleared!', 'success');\r\n    }\r\n\r\n    const handleCopyClick = (event)=> {\r\n        let text = document.getElementById('myBox');\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert('Copy to clipboard!', 'success');\r\n    }\r\n\r\n    const handleExtraSpaceClick = ()=> {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(' '));\r\n        props.showAlert('All extra spaces are removed!', 'success');\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode === 'light' ? 'black' : 'white'}}>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" onChange={handleOnChange} style={{backgroundColor: props.mode === 'light' ? 'white' : '#1a253a', color: props.mode === 'light' ? 'black' : 'white'}} value={text} id=\"myBox\" rows=\"6\"></textarea>\r\n            </div>\r\n            <div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Upercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopyClick}>Copy Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaceClick}>Remove Extra Space</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode === 'light' ? 'black' : 'white'}}>\r\n            <h3>Your text summery:</h3>\r\n            <p><b>{text.split(/\\s+/).filter((element) => {return element.length !== 0}).length}</b> words and <b>{text.length}</b> charactors, <b>{0.008 * text.split(\" \").filter((element) => {return element.length !== 0}).length}</b> minuets take to read below paragraph.</p>\r\n            <h3>Preview:</h3>\r\n            <p>{text.length>0 ? text: \"Nothing to preview.\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word)=> {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);       \r\n    }\r\n\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n                {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not.\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#1a253a';\n      showAlert(\"Dark mode has been enabled.\", \"success\");\n      // document.title = 'TextUtility - Dark Mode';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled.\", \"success\");\n      // document.title = 'TextUtility - Light Mode';\n    }\n  }\n\n  return (\n    <>\n    <Router>\n      <Navbar title=\"TextUtility\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Switch>\n          <Route exact path=\"/about\" key=\"about\">\n           <About mode={mode}/>\n          </Route>\n          <Route exact path=\"/\" key=\"textform\">\n            <Textform showAlert={showAlert} heading=\"TextUtility - word counter, character counter, remove extra spaces:\" mode={mode} />\n          </Route>\n        </Switch>\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}